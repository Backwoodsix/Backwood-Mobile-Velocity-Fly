local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local function createButton(name, position, imageId, isText)
	local btn
	if isText then
		btn = Instance.new("TextButton")
		btn.Name = name
		btn.Size = UDim2.new(0, 80, 0, 40)
		btn.Position = position
		btn.BackgroundColor3 = Color3.fromRGB(50, 120, 180)
		btn.TextColor3 = Color3.new(1, 1, 1)
		btn.Font = Enum.Font.SourceSansBold
		btn.TextSize = 22
		btn.Text = "Start Fly"
	else
		btn = Instance.new("ImageButton")
		btn.Name = name
		btn.Size = UDim2.new(0, 60, 0, 60)
		btn.Position = position
		btn.Image = imageId
		btn.BackgroundTransparency = 1
	end
	btn.ZIndex = 2
	btn.Parent = player:WaitForChild("PlayerGui"):WaitForChild("FlyControls") or player:WaitForChild("PlayerGui")
	return btn
end

-- Create ScreenGui if missing
local playerGui = player:WaitForChild("PlayerGui")
local screenGui = playerGui:FindFirstChild("FlyControls")
if not screenGui then
	screenGui = Instance.new("ScreenGui")
	screenGui.Name = "FlyControls"
	screenGui.Parent = playerGui
end

-- Create Up and Down buttons if missing
local upButton = screenGui:FindFirstChild("UpButton")
if not upButton then
	upButton = createButton("UpButton", UDim2.new(1, -80, 0.6, 0), "rbxassetid://6031097225")
end
local downButton = screenGui:FindFirstChild("DownButton")
if not downButton then
	downButton = createButton("DownButton", UDim2.new(1, -80, 0.7, 0), "rbxassetid://6031097246")
end

-- Create Fly Toggle button above Up and Down buttons
local flyToggleButton = screenGui:FindFirstChild("FlyToggleButton")
if not flyToggleButton then
	flyToggleButton = createButton("FlyToggleButton", UDim2.new(1, -80, 0.5, 0), nil, true)
end

-- Create Speed Input TextBox at top center
local speedInput = screenGui:FindFirstChild("SpeedInput")
if not speedInput then
	speedInput = Instance.new("TextBox")
	speedInput.Name = "SpeedInput"
	speedInput.Size = UDim2.new(0, 150, 0, 40)
	speedInput.Position = UDim2.new(0.5, -75, 0, 10)
	speedInput.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	speedInput.TextColor3 = Color3.new(1, 1, 1)
	speedInput.Font = Enum.Font.SourceSansBold
	speedInput.TextSize = 22
	speedInput.Text = "60"
	speedInput.ClearTextOnFocus = false
	speedInput.PlaceholderText = "Enter speed (10-200)"
	speedInput.TextStrokeTransparency = 0.7
	speedInput.BorderSizePixel = 0
	speedInput.ZIndex = 2
	speedInput.Parent = screenGui
end

local minSpeed, maxSpeed = 10, 200
local currentSpeed = 60

-- Validate input and update speed
local function updateSpeedFromText(text)
	local num = tonumber(text)
	if num then
		if num < minSpeed then
			num = minSpeed
		elseif num > maxSpeed then
			num = maxSpeed
		end
		currentSpeed = num
		speedInput.Text = tostring(currentSpeed)
	else
		-- Reset to current speed if invalid input
		speedInput.Text = tostring(currentSpeed)
	end
end

speedInput.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		updateSpeedFromText(speedInput.Text)
	end
end)

local flyActive = false
local bv

local ascending = false
local descending = false

local function setupCharacter(char)
	local humanoid = char:WaitForChild("Humanoid")
	local root = char:WaitForChild("HumanoidRootPart")

	-- Remove old BodyVelocity if exists
	for _, child in ipairs(root:GetChildren()) do
		if child:IsA("BodyVelocity") then
			child:Destroy()
		end
	end

	bv = nil
	ascending = false
	descending = false

	upButton.MouseButton1Down:Connect(function()
		if flyActive then
			ascending = true
		end
	end)
	upButton.MouseButton1Up:Connect(function()
		ascending = false
	end)

	downButton.MouseButton1Down:Connect(function()
		if flyActive then
			descending = true
		end
	end)
	downButton.MouseButton1Up:Connect(function()
		descending = false
	end)

	RunService.RenderStepped:Connect(function()
		if not flyActive then
			if bv and bv.Parent then
				bv:Destroy()
				bv = nil
			end
			return
		end
		if not char or not char.Parent then return end
		if not bv then
			bv = Instance.new("BodyVelocity")
			bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
			bv.P = 1e4
			bv.Velocity = Vector3.new(0, 0, 0)
			bv.Parent = root
		end

		local moveDir = humanoid.MoveDirection
		local yVel = 0

		if ascending then
			yVel = 1
		elseif descending then
			yVel = -1
		end

		local combined = Vector3.new(moveDir.X, yVel, moveDir.Z)
		if combined.Magnitude > 0 then
			bv.Velocity = combined.Unit * currentSpeed
		else
			bv.Velocity = Vector3.new(0, 0, 0)
		end
	end)
end

flyToggleButton.MouseButton1Click:Connect(function()
	flyActive = not flyActive
	if flyActive then
		flyToggleButton.Text = "Stop Fly"
	else
		flyToggleButton.Text = "Start Fly"
		if bv and bv.Parent then
			bv:Destroy()
			bv = nil
		end
		ascending = false
		descending = false
	end
end)

local character = player.Character or player.CharacterAdded:Wait()
setupCharacter(character)
player.CharacterAdded:Connect(setupCharacter)
